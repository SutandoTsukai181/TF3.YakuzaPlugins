// Copyright (c) 2021 Kaplas
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
namespace TF3.Tests.YakuzaKenzan
{
    using System;
    using NUnit.Framework;
    using TF3.YarhlPlugin.YakuzaKenzan.Converters.PacEncount;
    using TF3.YarhlPlugin.YakuzaKenzan.Formats;
    using Yarhl.IO;
    using Yarhl.Media.Text;

    [TestFixture]
    public class PacEncountTests
    {
        // modified wdr/encount/pac_encount.bin
        private readonly byte[] _data =
        {
            0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02,
            0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x02, 0x10, 0x00, 0x00, 0x03, 0xd0, 0x00, 0x00, 0x05, 0xa0,
            0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x08, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x01, 0xcc,
            0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x00, 0x77, 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x01, 0x5c,
            0x00, 0x00, 0x00, 0xac, 0x02, 0x01, 0x10, 0x64, 0x14, 0x06, 0x10, 0x00, 0x00, 0x00, 0x01, 0x74,
            0x00, 0x00, 0x00, 0xb8, 0x02, 0x01, 0x06, 0x64, 0x04, 0x06, 0x20, 0x40, 0x00, 0x00, 0x01, 0x8c,
            0x00, 0x00, 0x00, 0xc4, 0x02, 0x01, 0x00, 0x64, 0x04, 0x07, 0x10, 0x00, 0x00, 0x00, 0x01, 0xa4,
            0x00, 0x00, 0x00, 0xd0, 0x02, 0x01, 0x06, 0x64, 0x04, 0x00, 0x00, 0x10, 0x00, 0x0c, 0x04, 0x00,
            0x00, 0x00, 0x01, 0xbc, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0xc9,
            0x00, 0x00, 0x01, 0x1c, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0xca, 0x00, 0x00, 0x01, 0x2c,
            0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0xcb, 0x00, 0x00, 0x01, 0x4c, 0x03, 0x4c, 0x00, 0x03,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x14,
            0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x06, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x06, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x01,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x42, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
            0x01, 0x42, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x42, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
            0x01, 0x42, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x01,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x42, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
            0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x82, 0xa8, 0x82, 0xa2,
            0x81, 0x40, 0x8b, 0x4d, 0x97, 0x6c, 0x81, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd0,
            0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x08, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x01, 0xb8,
            0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x00, 0x77, 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x01, 0x4c,
            0x00, 0x00, 0x00, 0xac, 0x02, 0x01, 0x10, 0x64, 0x14, 0x06, 0x10, 0x00, 0x00, 0x00, 0x01, 0x64,
            0x00, 0x00, 0x00, 0xb8, 0x02, 0x01, 0x06, 0x64, 0x04, 0x06, 0x20, 0x40, 0x00, 0x00, 0x01, 0x7c,
            0x00, 0x00, 0x00, 0xc4, 0x02, 0x01, 0x00, 0x64, 0x04, 0x07, 0x10, 0x00, 0x00, 0x00, 0x01, 0x94,
            0x00, 0x00, 0x00, 0xd0, 0x02, 0x01, 0x06, 0x64, 0x04, 0x00, 0x00, 0x10, 0x00, 0x08, 0x03, 0x00,
            0x00, 0x00, 0x01, 0xac, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0xb5,
            0x00, 0x00, 0x01, 0x0c, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0xb6, 0x00, 0x00, 0x01, 0x1c,
            0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0xb7, 0x00, 0x00, 0x01, 0x3c, 0x03, 0x4c, 0x00, 0x03,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x04, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x04, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x01,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x42, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
            0x01, 0x42, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x42, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
            0x01, 0x42, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x01,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x42, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
            0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x82, 0xa0, 0x82, 0xa2,
            0x82, 0xc2, 0x81, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xbc, 0x30, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x08, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x01, 0xc8,
            0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x00, 0x77, 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x01, 0x5c,
            0x00, 0x00, 0x00, 0xac, 0x02, 0x01, 0x10, 0x64, 0x14, 0x06, 0x10, 0x00, 0x00, 0x00, 0x01, 0x74,
            0x00, 0x00, 0x00, 0xb8, 0x02, 0x01, 0x06, 0x64, 0x04, 0x06, 0x20, 0x40, 0x00, 0x00, 0x01, 0x8c,
            0x00, 0x00, 0x00, 0xc4, 0x02, 0x01, 0x00, 0x64, 0x04, 0x07, 0x10, 0x00, 0x00, 0x00, 0x01, 0xa4,
            0x00, 0x00, 0x00, 0xd0, 0x02, 0x01, 0x06, 0x64, 0x04, 0x00, 0x00, 0x10, 0x00, 0x08, 0x04, 0x00,
            0x00, 0x00, 0x01, 0xbc, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0xc5,
            0x00, 0x00, 0x01, 0x1c, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0xc6, 0x00, 0x00, 0x01, 0x2c,
            0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0xc7, 0x00, 0x00, 0x01, 0x4c, 0x03, 0x4c, 0x00, 0x03,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x14,
            0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x04, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x04, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x01,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x42, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
            0x01, 0x42, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x42, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
            0x01, 0x42, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x01,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x42, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
            0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x91, 0xd2, 0x82, 0xc4,
            0x82, 0xe2, 0x81, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xcc, 0x30, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x08, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x01, 0xcc,
            0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x00, 0x77, 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x01, 0x5c,
            0x00, 0x00, 0x00, 0xac, 0x02, 0x01, 0x10, 0x64, 0x14, 0x06, 0x10, 0x00, 0x00, 0x00, 0x01, 0x74,
            0x00, 0x00, 0x00, 0xb8, 0x02, 0x01, 0x06, 0x64, 0x04, 0x06, 0x20, 0x40, 0x00, 0x00, 0x01, 0x8c,
            0x00, 0x00, 0x00, 0xc4, 0x02, 0x01, 0x00, 0x64, 0x04, 0x07, 0x10, 0x00, 0x00, 0x00, 0x01, 0xa4,
            0x00, 0x00, 0x00, 0xd0, 0x02, 0x01, 0x06, 0x64, 0x04, 0x00, 0x00, 0x10, 0x00, 0x0c, 0x04, 0x00,
            0x00, 0x00, 0x01, 0xbc, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0xc9,
            0x00, 0x00, 0x01, 0x1c, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0xca, 0x00, 0x00, 0x01, 0x2c,
            0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0xcb, 0x00, 0x00, 0x01, 0x4c, 0x03, 0x4c, 0x00, 0x03,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x14,
            0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x06, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x06, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x01,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x42, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
            0x01, 0x42, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x42, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
            0x01, 0x42, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x01,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x42, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
            0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x82, 0xa8, 0x82, 0xa2,
            0x81, 0x40, 0x91, 0xd2, 0x82, 0xc4, 0x81, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd0,
            0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x08, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x01, 0xcc,
            0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x01, 0x00, 0x77, 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x01, 0x5c,
            0x00, 0x00, 0x00, 0xac, 0x02, 0x01, 0x10, 0x64, 0x14, 0x06, 0x10, 0x00, 0x00, 0x00, 0x01, 0x74,
            0x00, 0x00, 0x00, 0xb8, 0x02, 0x01, 0x06, 0x64, 0x04, 0x06, 0x20, 0x40, 0x00, 0x00, 0x01, 0x8c,
            0x00, 0x00, 0x00, 0xc4, 0x02, 0x01, 0x00, 0x64, 0x04, 0x07, 0x10, 0x00, 0x00, 0x00, 0x01, 0xa4,
            0x00, 0x00, 0x00, 0xd0, 0x02, 0x01, 0x06, 0x64, 0x04, 0x00, 0x00, 0x10, 0x00, 0x0c, 0x04, 0x00,
            0x00, 0x00, 0x01, 0xbc, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0xc9,
            0x00, 0x00, 0x01, 0x1c, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0xca, 0x00, 0x00, 0x01, 0x2c,
            0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0xcb, 0x00, 0x00, 0x01, 0x4c, 0x03, 0x4c, 0x00, 0x03,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x00, 0x14,
            0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x06, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x06, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x01,
            0x00, 0x00, 0x00, 0x00, 0x01, 0x42, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
            0x01, 0x42, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x42, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
            0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
            0x01, 0x42, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x01,
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x42, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
            0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x82, 0xa8, 0x82, 0xa2,
            0x81, 0x40, 0x8b, 0x4d, 0x97, 0x6c, 0x81, 0x49, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xd0,
            0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        };

        [Test]
        public void NullSourceThrowsException()
        {
            var converter = new Reader();
            _ = Assert.Throws<ArgumentNullException>(() => converter.Convert(null));
        }

        [Test]
        public void ReadPacEncount()
        {
            byte[] data = new byte[_data.Length];

            Array.Copy(_data, data, _data.Length);

            using DataStream ds = DataStreamFactory.FromArray(data, 0, data.Length);
            BinaryFormat binary = new BinaryFormat(ds);

            var converter = new Reader();
            PacEncount bin = converter.Convert(binary);

            Assert.IsNotNull(bin);
            Assert.AreEqual(3, bin.MsgArrays.Length);
            Assert.AreEqual(2, bin.MsgArrays[1].Length);

            Assert.AreEqual("おい　貴様！", bin.MsgArrays[0][0].MsgStrings[0].Text);
            Assert.AreEqual("あいつ…", bin.MsgArrays[1][0].MsgStrings[0].Text);
        }

        [Test]
        public void WritingNullSourceThrowsException()
        {
            var converter = new Writer();
            _ = Assert.Throws<ArgumentNullException>(() => converter.Convert(null));
        }

        [Test]
        public void WritePacEncount()
        {
            byte[] data = new byte[_data.Length];

            Array.Copy(_data, data, _data.Length);

            using DataStream expected = DataStreamFactory.FromArray(data, 0, data.Length);
            using DataStream ds = DataStreamFactory.FromArray(data, 0, data.Length);
            BinaryFormat binary = new BinaryFormat(ds);

            var reader = new Reader();
            PacEncount bin = reader.Convert(binary);

            var writer = new Writer();
            BinaryFormat result = writer.Convert(bin);

            Assert.AreEqual(_data.Length, result.Stream.Length);
        }

        [Test]
        public void ReplaceStrings()
        {
            byte[] data = new byte[_data.Length];

            Array.Copy(_data, data, _data.Length);

            using DataStream expected = DataStreamFactory.FromArray(data, 0, data.Length);
            using DataStream ds = DataStreamFactory.FromArray(data, 0, data.Length);
            BinaryFormat binary = new BinaryFormat(ds);

            var reader = new Reader();
            PacEncount bin = reader.Convert(binary);

            var poWriter = new ExtractStrings();
            Po po = poWriter.Convert(bin);

            po.Entries[0].Translated = "Translation test";
            var translator = new Translate();
            translator.Initialize(po);

            PacEncount binResult = translator.Convert(bin);

            Assert.AreEqual("Translation test", binResult.MsgArrays[0][0].MsgStrings[0].Text);
        }

        [Test]
        public void ExtractStringsFromNullThrowsException()
        {
            var converter = new ExtractStrings();
            _ = Assert.Throws<ArgumentNullException>(() => converter.Convert(null));
        }

        [Test]
        public void TranslateNullThrowsException()
        {
            var converter = new Translate();
            _ = Assert.Throws<ArgumentNullException>(() => converter.Convert(null));
        }

        [Test]
        public void UninitializedTranslateThrowsException()
        {
            byte[] data = new byte[_data.Length];

            Array.Copy(_data, data, _data.Length);

            using DataStream expected = DataStreamFactory.FromArray(data, 0, data.Length);
            using DataStream ds = DataStreamFactory.FromArray(data, 0, data.Length);
            BinaryFormat binary = new BinaryFormat(ds);

            var reader = new Reader();
            PacEncount bin = reader.Convert(binary);

            var translator = new Translate();
            _ = Assert.Throws<InvalidOperationException>(() => translator.Convert(bin));
        }
    }
}
